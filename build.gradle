plugins {
    id "java"
    id "java-library"
    id "io.spring.dependency-management" version "$springDependencyManagementPluginVersion"
    id "org.springframework.boot" version "$springBootVersion"
}

group 'orderservice'
version '1.0'

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
    options.compilerArgs = [
            "-Amapstruct.unmappedTargetPolicy=IGNORE",
            "-Amapstruct.defaultComponentModel=spring"
    ]
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")

    compileOnly("org.mapstruct:mapstruct:$mapstructVersion")
    annotationProcessor("org.mapstruct:mapstruct-processor:$mapstructVersion")

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springdoc:springdoc-openapi-ui:1.5.8")
    implementation("org.javatuples:javatuples:1.2");
    implementation("org.flywaydb:flyway-core")
    runtimeOnly("com.h2database:h2")

    //TEST DEPENDENCIES
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit" // excluding junit 4
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("org.flywaydb:flyway-core")
    testImplementation("com.h2database:h2")
}

test {
    jvmArgs("-Dspring.output.ansi.enabled=ALWAYS")
    useJUnitPlatform()
}